module {
  func.func @main(%arg0: !torch.vtensor<[2,5,3,4],f32>, %arg1: !torch.int, %arg2: !torch.int) -> !torch.vtensor<[2,30,4],f32> {
    %int0 = torch.constant.int 0
    %int2 = torch.constant.int 2
    %int1 = torch.constant.int 1
    %int4 = torch.constant.int 4
    %none = torch.constant.none
    %cpu = torch.constant.device "cpu"
    %false = torch.constant.bool false
    %0 = torch.aten.arange.start_step %int0, %int2, %int1, %int4, %none, %cpu, %false : !torch.int, !torch.int, !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[2],si64>
    %int0_0 = torch.constant.int 0
    %1 = torch.aten.unsqueeze %0, %int0_0 : !torch.vtensor<[2],si64>, !torch.int -> !torch.vtensor<[1,2],si64>
    %int0_1 = torch.constant.int 0
    %int2_2 = torch.constant.int 2
    %int1_3 = torch.constant.int 1
    %int4_4 = torch.constant.int 4
    %none_5 = torch.constant.none
    %cpu_6 = torch.constant.device "cpu"
    %false_7 = torch.constant.bool false
    %2 = torch.aten.arange.start_step %int0_1, %int2_2, %int1_3, %int4_4, %none_5, %cpu_6, %false_7 : !torch.int, !torch.int, !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[2],si64>
    %int-1 = torch.constant.int -1
    %3 = torch.aten.unsqueeze %2, %int-1 : !torch.vtensor<[2],si64>, !torch.int -> !torch.vtensor<[2,1],si64>
    %int1_8 = torch.constant.int 1
    %4 = torch.aten.add.Tensor %1, %3, %int1_8 : !torch.vtensor<[1,2],si64>, !torch.vtensor<[2,1],si64>, !torch.int -> !torch.vtensor<[2,2],si64>
    %int0_9 = torch.constant.int 0
    %int2_10 = torch.constant.int 2
    %int1_11 = torch.constant.int 1
    %int4_12 = torch.constant.int 4
    %none_13 = torch.constant.none
    %cpu_14 = torch.constant.device "cpu"
    %false_15 = torch.constant.bool false
    %5 = torch.aten.arange.start_step %int0_9, %int2_10, %int1_11, %int4_12, %none_13, %cpu_14, %false_15 : !torch.int, !torch.int, !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[2],si64>
    %int0_16 = torch.constant.int 0
    %6 = torch.aten.unsqueeze %5, %int0_16 : !torch.vtensor<[2],si64>, !torch.int -> !torch.vtensor<[1,2],si64>
    %int0_17 = torch.constant.int 0
    %int3 = torch.constant.int 3
    %int1_18 = torch.constant.int 1
    %int4_19 = torch.constant.int 4
    %none_20 = torch.constant.none
    %cpu_21 = torch.constant.device "cpu"
    %false_22 = torch.constant.bool false
    %7 = torch.aten.arange.start_step %int0_17, %int3, %int1_18, %int4_19, %none_20, %cpu_21, %false_22 : !torch.int, !torch.int, !torch.int, !torch.int, !torch.none, !torch.Device, !torch.bool -> !torch.vtensor<[3],si64>
    %int-1_23 = torch.constant.int -1
    %8 = torch.aten.unsqueeze %7, %int-1_23 : !torch.vtensor<[3],si64>, !torch.int -> !torch.vtensor<[3,1],si64>
    %int1_24 = torch.constant.int 1
    %9 = torch.aten.add.Tensor %6, %8, %int1_24 : !torch.vtensor<[1,2],si64>, !torch.vtensor<[3,1],si64>, !torch.int -> !torch.vtensor<[3,2],si64>
    %int0_25 = torch.constant.int 0
    %int0_26 = torch.constant.int 0
    %int0_27 = torch.constant.int 0
    %int0_28 = torch.constant.int 0
    %10 = torch.prim.ListConstruct %int0_25, %int0_26, %int0_27, %int0_28 : (!torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %float0.000000e00 = torch.constant.float 0.000000e+00
    %11 = torch.aten.constant_pad_nd %arg0, %10, %float0.000000e00 : !torch.vtensor<[2,5,3,4],f32>, !torch.list<int>, !torch.float -> !torch.vtensor<[2,5,3,4],f32>
    %int-1_29 = torch.constant.int -1
    %12 = torch.aten.unsqueeze %4, %int-1_29 : !torch.vtensor<[2,2],si64>, !torch.int -> !torch.vtensor<[2,2,1],si64>
    %int-1_30 = torch.constant.int -1
    %13 = torch.aten.unsqueeze %12, %int-1_30 : !torch.vtensor<[2,2,1],si64>, !torch.int -> !torch.vtensor<[2,2,1,1],si64>
    %int0_31 = torch.constant.int 0
    %int0_32 = torch.constant.int 0
    %int9223372036854775807 = torch.constant.int 9223372036854775807
    %int1_33 = torch.constant.int 1
    %14 = torch.aten.slice.Tensor %11, %int0_31, %int0_32, %int9223372036854775807, %int1_33 : !torch.vtensor<[2,5,3,4],f32>, !torch.int, !torch.int, !torch.int, !torch.int -> !torch.vtensor<[2,5,3,4],f32>
    %int1_34 = torch.constant.int 1
    %int0_35 = torch.constant.int 0
    %int9223372036854775807_36 = torch.constant.int 9223372036854775807
    %int1_37 = torch.constant.int 1
    %15 = torch.aten.slice.Tensor %14, %int1_34, %int0_35, %int9223372036854775807_36, %int1_37 : !torch.vtensor<[2,5,3,4],f32>, !torch.int, !torch.int, !torch.int, !torch.int -> !torch.vtensor<[2,5,3,4],f32>
    %none_38 = torch.constant.none
    %none_39 = torch.constant.none
    %16 = torch.prim.ListConstruct %none_38, %none_39, %13, %9 : (!torch.none, !torch.none, !torch.vtensor<[2,2,1,1],si64>, !torch.vtensor<[3,2],si64>) -> !torch.list<optional<vtensor>>
    %17 = torch.aten.index.Tensor %15, %16 : !torch.vtensor<[2,5,3,4],f32>, !torch.list<optional<vtensor>> -> !torch.vtensor<[2,5,2,2,3,2],f32>
    %int0_40 = torch.constant.int 0
    %int1_41 = torch.constant.int 1
    %int2_42 = torch.constant.int 2
    %int4_43 = torch.constant.int 4
    %int3_44 = torch.constant.int 3
    %int5 = torch.constant.int 5
    %18 = torch.prim.ListConstruct %int0_40, %int1_41, %int2_42, %int4_43, %int3_44, %int5 : (!torch.int, !torch.int, !torch.int, !torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %19 = torch.aten.permute %17, %18 : !torch.vtensor<[2,5,2,2,3,2],f32>, !torch.list<int> -> !torch.vtensor<[2,5,2,3,2,2],f32>
    %int0_45 = torch.constant.int 0
    %20 = torch.aten.clone %19, %int0_45 : !torch.vtensor<[2,5,2,3,2,2],f32>, !torch.int -> !torch.vtensor<[2,5,2,3,2,2],f32>
    %int2_46 = torch.constant.int 2
    %int30 = torch.constant.int 30
    %int4_47 = torch.constant.int 4
    %21 = torch.prim.ListConstruct %int2_46, %int30, %int4_47 : (!torch.int, !torch.int, !torch.int) -> !torch.list<int>
    %22 = torch.aten._unsafe_view %20, %21 : !torch.vtensor<[2,5,2,3,2,2],f32>, !torch.list<int> -> !torch.vtensor<[2,30,4],f32>
    return %22 : !torch.vtensor<[2,30,4],f32>
  }
}
