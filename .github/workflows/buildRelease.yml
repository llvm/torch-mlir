name: Release Build

on:
  workflow_dispatch:
    inputs:
      release_id:
        description: 'Release id to upload artifacts to'
        default: ''
      python_package_version:
        description: 'Version to use for creating the Python package'
        default: ''

jobs:
  build_linux:
    name: Manylinux Build
    runs-on: ubuntu-latest
    steps:
    - name: Get torch-mlir
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: ./.github/actions/setup-build
      with:
        cache-suffix: ''
    - name: Build Python wheels and smoke test.
      run: |
        cd $GITHUB_WORKSPACE
        python -m pip install wheel
        ./build_tools/python_deploy/build_linux_packages.sh

  build_macos:
    name: MacOS Build
    runs-on: macos-latest
    steps:
    - name: Get torch-mlir
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: ./.github/actions/setup-build
      with:
        cache-suffix: ''
    - name: Build Python wheels and smoke test.
      run: |
        cd $GITHUB_WORKSPACE
        python -m pip install wheel
        sudo ./build_tools/python_deploy/install_macos_deps.sh
        python_versions="3.9 3.10" ./build_tools/python_deploy/build_macos_packages.sh


    # If we were given a release_id, then upload the package we just built
    # to the github releases page.
    - name: Upload Release Assets (if requested)
      if: github.event.inputs.release_id != ''
      id: upload-release-assets
      uses: dwenegar/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_INVOCATION_TOKEN }}
      with:
        release_id: ${{ github.event.inputs.release_id }}
        assets_path: ./wheelhouse/*.whl
    # Publishing is necessary to make the release visible to `pip`
    # on the github releases page.
    - name: Publish Release (if requested)
      if: github.event.inputs.release_id != ''
      id: publish_release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_INVOCATION_TOKEN }}
      with:
        release_id: ${{ github.event.inputs.release_id }}
